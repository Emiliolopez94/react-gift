{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGid.js","components/GiftGrid.js","hooks/UseFetch.js","GifExpertApp.js","index.js"],"names":["AddCategory","Setcategories","useState","inputValue","setInput","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","GifGridItem","title","url","className","src","alt","getGift","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFecth","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAwCeA,EArCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAElCC,EAFkC,KAEtBC,EAFsB,KAoBrC,OACA,oCACA,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAICJ,EAAWK,OAAOC,OAAS,GAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAS,MAOT,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAtBgB,SAACP,GACjBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAASE,EAAEU,OAAOJ,aCGPK,EAVK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IACxB,OAEI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,gDACkCO,UAAUF,GAD5C,+DAEAG,MAAOR,GAFP,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAaZY,GAbY,4CAAH,sDC6CLM,EAxCC,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECFR,SAACA,GAAc,IAAD,EACVtB,mBAAS,CACjC4B,KAAM,GACNQ,SAAS,IAHyB,mBAC5BC,EAD4B,KACtBC,EADsB,KAuBtC,OAfGC,qBAAW,WAELlB,EAAQC,GACNkB,MAAK,SAAAC,GACJC,YAAW,WACPJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAEd,UAIJ,CAACd,IAELe,EDnBgBM,CAASrB,GAAzBM,EAFyB,EAEzBA,KAAKQ,EAFoB,EAEpBA,QAWR,OACI,oCACA,4BAAKd,GACJc,GAAY,uBAAGlB,UAAW,oCAAd,eACX,yBAAKA,UAAU,aAKTU,EAAKE,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACAa,IAAKb,EAAIC,IAEJD,UEONc,EAlCM,WAAM,MAEY7C,mBAAS,CAAC,cAFtB,mBAEjB8C,EAFiB,KAEL/C,EAFK,KAKvB,OACI,oCACA,4CACA,kBAAC,EAAD,CACAA,cAAiBA,IAGjB,6BAKG,4BAEQ+C,EAAWhB,KAAK,SAACR,GAAD,OACf,kBAAC,EAAD,CACAsB,IAAKtB,EACLA,SAAUA,UCnB9ByB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f95dc471.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';  \r\n\r\nconst AddCategory = ({Setcategories}) => {\r\n\r\nconst [inputValue, setInput] = useState('');\r\n\r\nconst InputChange = (e) => {\r\n    console.log(e.target.value);\r\n    setInput(e.target.value);\r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    //Setcategories([...categories, inputValue])\r\n\r\n    //validar\r\n    if(inputValue.trim().length > 2)\r\n    Setcategories(cats => [inputValue,...cats])\r\n    setInput('');\r\n}\r\n\r\n\r\n    return (  \r\n    <>\r\n    <form onSubmit={ handleSubmit} >\r\n    <input\r\n    type=\"text\"\r\n    value={inputValue}\r\n    onChange={InputChange}\r\n    />\r\n    </form>\r\n    </>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    Setcategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","import React from 'react';\r\n\r\nconst GifGridItem = ({title,url}) => {\r\n    return ( \r\n\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GifGridItem;","export const getGift = async(category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ipX07HXZY43BXDW6ciVdia4jrPJ3xwnl`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url   \r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFecth } from '../hooks/UseFetch';\r\n//import { getGift } from '../helpers/GetGid';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\nconst {data,loading} = useFecth(category);\r\n\r\n\r\n    /*const [images, setImages] = useState([]);\r\n\r\n    const [count, SetCount] = useState(0);\r\n    useEffect(()=>{\r\n        getGift(category)\r\n        .then(setImages)\r\n    }, [category])\r\n   */ \r\n    return ( \r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading  && <p className= \"animate__animated animate__flash\">Cargando...</p>}\r\n          <div className=\"card-grid\">\r\n                \r\n          \r\n            {\r\n                 \r\n                data.map( img =>(\r\n                <GifGridItem\r\n                key={img.id}\r\n                \r\n                { ...img }\r\n                \r\n\r\n\r\n                />\r\n                ))\r\n                \r\n            }\r\n     \r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGift } from \"../helpers/GetGid\";\r\n\r\nexport const useFecth = (category) => {\r\n   const [state,setState] = useState({\r\n    data: [],\r\n    loading: true\r\n\r\n   });\r\n\r\n\r\n   useEffect( () => {\r\n\r\n         getGift(category)\r\n          .then(imgs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });  \r\n            }, 3000 );\r\n\r\n        })\r\n\r\n        }, [category])\r\n        \r\nreturn state;\r\n    }","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GiftGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    //const categories = ['One punch','Superman','Batman'];\r\n    const[categories, Setcategories] = useState(['One punch']);   \r\n\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory\r\n        Setcategories = {Setcategories}\r\n        \r\n        />\r\n        <hr/>\r\n\r\n        \r\n       \r\n        {\r\n           <ol>\r\n               {\r\n                   categories.map( (category) => \r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                    \r\n                    \r\n                    />\r\n                   )\r\n               }\r\n           </ol>\r\n        }\r\n        </>\r\n      );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n// GifExpertAPP"],"sourceRoot":""}